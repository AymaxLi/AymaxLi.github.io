<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Aymax&#39;s Home</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://aymaxli.cn/"/>
  <updated>2017-04-07T14:19:47.971Z</updated>
  <id>http://aymaxli.cn/</id>
  
  <author>
    <name>AymaxLi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>图片按比例响应的魔法</title>
    <link href="http://aymaxli.cn/2017/04/06/keep-aspect-ratio-of-images/"/>
    <id>http://aymaxli.cn/2017/04/06/keep-aspect-ratio-of-images/</id>
    <published>2017-04-05T16:00:00.000Z</published>
    <updated>2017-04-07T14:19:47.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>小伙伴们在写 banner 的时候，肯定都会遇到响应问题🐍，so 我们来看看图片按比例响应的各种魔法吧~</p>
<p><img src="/2017-4-6/images/没见过世面.jpg" alt="没见过世面.jpg"></p>
<h2 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h2><h3 id="初阶魔法-vw"><a href="#初阶魔法-vw" class="headerlink" title="初阶魔法 - vw"></a>初阶魔法 - vw</h3><p><code>vw</code> 是 <code>CSS3</code>新增的一个长度单位，与其配对的还有 <code>vh</code>。</p>
<blockquote>
<p>相对于视口的宽度，视口被均分为100单位的vw。</p>
</blockquote>
<p>官方的解释有些拗口🙊，举个简单的栗子🌰，假如视口宽度为 200px，则 30vw = 60px。<br>那么，我们直接给用 <code>vw</code> 作为 banner 的 <code>width</code>、<code>height</code> 单位，便可实现 banner 保持宽高比自适应视口宽度了。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.banner</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">80vw</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">60vw</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上，利用单位 <code>vw</code> 来定义宽高估摸是<strong>最简单暴力</strong>的解决方法了。</p>
<h3 id="黑魔法-JS"><a href="#黑魔法-JS" class="headerlink" title="黑魔法 - JS"></a>黑魔法 - JS</h3><p>用 <code>JavaScript</code> 也能实现这个需求，大概思路是用 <code>CSS</code> 让 banner 的宽度自适应，然后监听 <code>onresize</code> 事件，当 <code>resize</code> 事件发生的时候用 <code>JS</code> 去修改 banner 的高度。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.banner</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">80%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">'resize'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> target = e.target;</div><div class="line">  <span class="keyword">if</span> (hasClass(target, <span class="string">'banner'</span>)) &#123;</div><div class="line">    target.style.height = <span class="built_in">parseFloat</span>(getProperty(target, <span class="literal">null</span>, <span class="string">'width'</span>)) * <span class="number">0.618</span> + <span class="string">'px'</span>;</div><div class="line">  &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 判断元素是否有某类名</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">hasClass</span>(<span class="params">element, className</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(^|\\s+)'</span> + className + <span class="string">'(\\s+|$)'</span>)</div><div class="line">  <span class="keyword">return</span> reg.test(element.className)</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 获取元素外联样式</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getProperty</span>(<span class="params">element, pseudo, property</span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="built_in">window</span>.getComputedStyle(element, pseudo).getPropertyValue(property);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>假如 className = ‘banner’，上面的正则可以看成<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> reg = <span class="regexp">/^banner$|^banner\s+|\s+banner\s+|\sbanner$/</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>🌰对应例子：’banner’ | ‘banner xxx’ | ‘xxx banner xxx’ | ‘xxx banner’</p>
<ul>
<li><code>getProperty()</code><ul>
<li>参数：第一个参数是 dom 对象。第二个参数是伪元素名，若是普通元素就传 <code>null</code>。</li>
<li>返回值：一个<strong>实时的</strong> <code>CSSStyleDeclaration</code> 对象，当元素的样式更改时，它会自动更新本身。可以通过它的 <code>getPropertyValue()</code> 方法，传入一个属性名(String)来获取外联 <code>CSS</code> 属性。</li>
</ul>
</li>
</ul>
<p>虽然用 <code>JS</code> 也能完成任务，而且兼容性会比 <code>CSS3</code> 好，但是黑魔法终究是黑魔法，这做会<strong>牺牲一定的页面性能</strong>，是一种曲线救国的方法。</p>
<h3 id="上古秘法-Padding"><a href="#上古秘法-Padding" class="headerlink" title="上古秘法 - Padding"></a>上古秘法 - Padding</h3><p>首先我们可以做个实验<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.daddy</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</div><div class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.duote</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: pink;</div><div class="line">  <span class="attribute">padding-bottom</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"daddy"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"duote"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><a href="/2017-4-6/demo/demo1.html">demo1</a></p>
<p>检查元素，我们会发现，多特的 <code>padding-bottom</code> 是 <code>500px</code>，而不是 <code>400px</code>。</p>
<blockquote>
<p>也就是说，<code>padding-bottom</code> 的百分比数值的是<strong>父元素的宽度</strong>做参照的！！！ 😱</p>
</blockquote>
<p>那么，我们就可以利用这个性质，爹地的宽度自适应视口，然后<strong>让多特按百分比计算高度，撑开爹地</strong>，这不就可以完成需求，让爹地的高度和宽度保持比例了嘛 😋<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.daddy</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.daddy</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</div><div class="line">  <span class="comment">/* 伪元素默认为行内元素，改成块级元素才能撑开 daddy */</span></div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">  <span class="attribute">background-color</span>: pink;</div><div class="line">  <span class="attribute">padding-bottom</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"daddy"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>hei i am Aymax<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><a href="/2017-4-6/demo/demo2.html">demo2</a></p>
<p>demo2 中，dom 结构的到了优化，用<strong>伪元素</strong> <code>::before</code>来代替了多特，值得注意的是，伪元素默认为 inline-element (行内元素)，所以我们要给它的 <code>display</code> 属性赋值为 <code>inline-block</code>，🙋为什么不用 <code>block</code> 咧？</p>
<p>因为，很多时候 banner 上还会有一些标语，所以我们还要在 daddy 里面加一些子元素，比如一个 <code>&lt;span&gt;</code> 标签。</p>
<p>假如我们用了 <code>block</code> 的话，伪元素便会占据一整行，导致 daddy 的其他子元素要换行显示，这样高度就会比预期的高一截，</p>
<p>即伪元素的 <code>padding-bottom</code> 加 daddy 的 <code>line-height</code>，如下图</p>
<p><img src="/2017-4-6/images/block和inline-block.jpg" alt="block和inline-block"></p>
<p>然鹅，大家有没有花现，就算伪元素用了 <code>inline-block</code>，daddy 的底部还是会有一条迷之空白带 🤷 (黑人问号？？？)</p>
<p><img src="/2017-4-6/images/white-blank-space.jpg" alt="黑人问号"></p>
<p>冷静冷静，右键审查元素，一看，不是 <code>padding</code>，也不是 <code>margin</code>，哪里跑出来个瓜皮空白带啊，我也想棒棒啊，哭唧唧 (´༎ຶД༎ຶ`)，wtf</p>
<p>好气啊，不过还是要保持冷静，好吧，我还是 google 一下吧，果然皇天不负有心人，张鑫旭大大的 blog 给出了答案，这其实是 <code>vertical-align</code> 和 <code>line-height</code> 的锅。</p>
<p><img src="/2017-4-6/images/fuck.jpg" alt="民国fuck.jpg"></p>
<p>首先，我们来了解一下 <code>vertical-align</code> 这个属性</p>
<blockquote>
<p>vertical-align 属性设置元素的垂直对齐方式。</p>
</blockquote>
<p>因为我们没有对 daddy 和 .daddy::before 设置 <code>vertical-align</code>，所以他们的 <code>vertical-align</code> 是默认值 <code>baseline</code>，即<strong>基线对齐</strong>，基线对齐又是什么皮皮呢，我们看下图</p>
<p><img src="/2017-4-6/images/baseline.jpg" alt="基线.jpg"></p>
<p>黑色虚线就是 <code>baseline</code>，因为伪元素 <code>daddy::before</code> 是 <code>inline-block</code> 的，这里我们可以把它当成一个字母来看待，和右边的字母平起平坐。很明显，那个瓜皮空白带是 <code>line-height</code>(行高) 的的锅。</p>
<p>🤦辣么咱们要如果解决这个问题呢？</p>
<blockquote>
<p><code>vertical-align: middle</code> 把此元素放置在父元素的中部。</p>
</blockquote>
<p>答案很简单。只需要将伪元素 <code>daddy::before</code> 的 <code>vertical-align</code> 定义为 <code>middle</code>，问题便迎刃而解 👏</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.daddy</span> &#123;</div><div class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</div><div class="line">  <span class="attribute">width</span>: <span class="number">60%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.daddy</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</div><div class="line">  <span class="comment">/* 伪元素默认为行内元素，改成块级元素才能撑开 daddy */</span></div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">  <span class="attribute">background-color</span>: pink;</div><div class="line">  <span class="attribute">padding-bottom</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">width</span>: .<span class="number">1px</span>;</div><div class="line">  <span class="comment">/* 很重要，解决 line-height 产生的空白带 */</span></div><div class="line">  <span class="attribute">vertical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"daddy"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">span</span>&gt;</span>hei i am Aymax<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><a href="/2017-4-6/demo/demo3.html">demo3</a></p>
<p>再把伪元素 <code>daddy::before</code> 的宽度设置为 <code>0.1px</code>，几乎消失在了用户的实现中(噗虽然不手动设置颜色的时候它本来就是透明的🌚)，就像一根牙签一样撑着 <code>div</code>，姑且唤作牙签魔法或者 stick magic 🍭吧~</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="https://segmentfault.com/q/1010000002501794" target="_blank" rel="external">如何用JavaScript判断dom是否有class的值？- segmentfault</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle" target="_blank" rel="external">getComputedStyle() - MDN</a></li>
<li><a href="http://www.jianshu.com/p/83a84445d967" target="_blank" rel="external">css实现高度height随宽度width变化保持比例不变 - 简书</a></li>
<li><a href="http://www.zhangxinxu.com/wordpress/2015/08/css-deep-understand-vertical-align-and-line-height/" target="_blank" rel="external">CSS深入理解vertical-align和line-height的基友关系 - 张鑫旭</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h2&gt;&lt;p&gt;小伙伴们在写 banner 的时候，肯定都会遇到响应问题🐍，so 我们来看
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Safari 的下载坑</title>
    <link href="http://aymaxli.cn/2017/03/20/Safari-download-problem/"/>
    <id>http://aymaxli.cn/2017/03/20/Safari-download-problem/</id>
    <published>2017-03-19T16:00:00.000Z</published>
    <updated>2017-03-21T14:14:38.669Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>近来接到一个优化需求是要改 iOS 端下载页面的流程，当初我以为这是小菜一碟，晚饭后便去南亭买了杯奶盖🍨，差屁颠屁颠的回了工作室🚲，后来发现才发现我真是 too navie 😷😷</p>
<h2 id="Details"><a href="#Details" class="headerlink" title="Details"></a>Details</h2><ul>
<li><p>以前的业务流程：<br>用户阅读完备注页后，点击按钮，通过 window.open(‘itms-service://xxxxxxx’) 打开新窗口，调用 itms-service 协议的空白页下载软件</p>
</li>
<li><p>新的流程：<br>用户来到备注页后，直接弹出下载提示，点击安装后继续阅读备注页</p>
</li>
</ul>
<h2 id="Trapped"><a href="#Trapped" class="headerlink" title="Trapped"></a>Trapped</h2><p>因为这个 itms-service://xxxxxxx 空白下载页我是无法控制的，我不可能从这里跳到备注页。所以我不能用 window.open(downloadUrl)，因为这会跳转到新页面。<strong>instead，我要在备注页直接调用这个 itms-service。</strong></p>
<h3 id="location-href"><a href="#location-href" class="headerlink" title="location.href"></a>location.href</h3><p>首先我尝试的第一个方法是直接改 location.href，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">location.href = <span class="string">'itms-service://xxxxxxx'</span>;</div></pre></td></tr></table></figure></p>
<p>这个方法在 iOS10 的 Safari 上是可行的，它会调用 items-service 来下载，但是 <strong>页面的 href 其实不会改变</strong>，会继续停留在备注页。</p>
<p>天真的我以为这样就能收工了，然而事情并没有这么顺利。iOS8 和 iOS9 的 Safari 对直接改 location.href 的浏览器行为并没有这么友好。</p>
<ul>
<li><p>在 iOS8 中，直接改 location.href 并不会马上有效果，<strong>要手动刷新</strong> 才会有下载提示。</p>
</li>
<li><p>在 iOS9 中，直接改 location.href 更加神奇，它虽然不用手动刷新也有下载提示，但是 <strong>点击下载后当前备注页会被关掉</strong>，令人汗颜。。。😓</p>
</li>
</ul>
<h3 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h3><p>后来，我尝试了第二个方法 - iframe<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> ifr = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</div><div class="line">ifr.src = <span class="string">'itms-service://xxxxxxx'</span>;</div><div class="line">ifr.style.display = <span class="string">'none'</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(ifr);</div></pre></td></tr></table></figure></p>
<p>很不巧，不同版本的 Safari 对 iframe 的处理也是不一样的，<strong>这种方法在 iOS9 的 Safari 中甚至会失效</strong></p>
<h2 id="Solved"><a href="#Solved" class="headerlink" title="Solved"></a>Solved</h2><p>最后，我找到能了兼容 iOS8/9/10 的方法 🙈🙉🙊<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> link = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</div><div class="line">link.href = <span class="string">'itms-service://xxxxxxx'</span>;</div><div class="line">link.style = <span class="string">"visibility: hidden"</span>;</div><div class="line"><span class="built_in">document</span>.body.appendChild(link);</div><div class="line">link.click();</div></pre></td></tr></table></figure></p>
<p>对于这种用 <code>a</code> 标签打开 itms-service://xxxxxxx 的方式，三个版本的 Safari 的浏览器行为终于一样了，都是能弹出下载提示，真是皆大欢喜啊，心中默默问候了 Safari 千百遍，终于能回宿舍洗澡睡觉了😭😭</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><a href="http://www.cnblogs.com/zichi/p/5011212.html" target="_blank" rel="external">Safari 下用 “location.href = filePath” 实现下载功能的诡异 bug</a></li>
<li><a href="http://www.webdeveloper.com/forum/showthread.php?112208-how-to-overcome-hidden-iframe-problem-in-Safari" target="_blank" rel="external">how to overcome hidden iframe problem in Safari</a></li>
<li><a href="http://stackoverflow.com/questions/23190467/how-can-i-make-my-file-download-work-on-ie-and-safari" target="_blank" rel="external">How can I make my file download work on IE and safari?</a></li>
<li><a href="https://www.keakon.net/2015/09/29/%E5%85%BC%E5%AE%B9iOS9Safari%E7%9A%84%E5%BA%94%E7%94%A8%E8%B7%B3%E8%BD%AC%E6%96%B9%E6%A1%88%E6%8E%A2%E7%B4%A2" target="_blank" rel="external">兼容 iOS 9 Safari 的应用跳转方案探索</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h2&gt;&lt;p&gt;近来接到一个优化需求是要改 iOS 端下载页面的流程，当初我以为这是小菜一碟
    
    </summary>
    
    
  </entry>
  
</feed>
